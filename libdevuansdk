#!/usr/bin/env zsh
#
# Copyright (c) 2016 Dyne.org Foundation
# libdevuansdk is written and maintained by
#     Jaromil <jaromil@dyne.org>
#     KatolaZ <katolaz@freaknet.org>
#     parazyd <parazyd@dyne.org>
#
# This file is part of libdevuansdk
#
# This source code is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this source code. If not, see <http://www.gnu.org/licenses/>.

devuan_sdk_version=0.1

notice "Loading Devuan SDK library v$devuan_sdk_version"

setopt pushdsilent
# export PATH="/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin"

SDK_LIB=${SDK_LIB:-`pwd`}

########################
## Load Zuper extensions
	if [[ -r   $SDK_LIB/zuper/zuper ]]; then
		source $SDK_LIB/zuper/zuper
	else source ./zuper/zuper; fi


sdk_init(){
    
    fn sdk_init 

# default operational paths
	R=${R:-$SDK_PREFIX}
	H=${H:-$SDK_HOME}
	E=${E:-$SDK_CONF}
	
	req=(os release version mirror section R H E)
	ckreq || { error "configuration is missing"; zshexit; return 1 }
    
    # setting core, base, and other packages
	
    [[ "$core_packages" = "" ]] && {
	# core packages for the system
	    core_packages=(devuan-keyring debian-keyring)
	    core_packages+=(initramfs-tools binutils ca-certificates curl)
	    core_packages+=(console-common less nano vim)
    }
    [[ "$base_packages" = "" ]] && {
	# base packages for the system
	    base_packages=(bzip2 dialog apt-utils fakeroot e2fsprogs parted)
    }
    [[ "$system_packages" = "" ]] && {
	# other system packages
	    system_packages=(sysvinit ssh)
    }
	
# default size for an img
    imgsize=${imgsize:-1337M}
    
    
## libdevuansdk-specific settings
    workdir="$H/workdir"
    strapdir="${workdir}/${os}-${release}-${version}"
    outdir="$H/builds"
    
	
    
	# KatolaZ  says: wtf????
	[[ -r $SDK_LIB/libdevuansdk ]] || {
		print "Devuan SDK is not installed in: $SDK_LIB"
		print "export SDK_LIB if installed on a different path"
	}
	
# conclude initialization
	
	DEBUG=${DEBUG:-0}
	QUIET=${QUIET:-0}
	LOG=${LOG:-""}
	
# path and debugging
	vars+=(R H E)
	vars+=(SDK_LIB SDK_PREFIX SDK_CONF SDK_HOME)
	
# config globals
	vars+=(os release version mirror section)
	vars+=(workdir strapdir)
	vars+=(imgsize)
	
# source $R/zlibs/library
	source $SDK_LIB/zlibs/bootstrap
	source $SDK_LIB/zlibs/helpers
# source $R/zlibs/imaging
	source $SDK_LIB/zlibs/isolinux
	source $SDK_LIB/zlibs/kernel
	source $SDK_LIB/zlibs/qemu
	source $SDK_LIB/zlibs/grub
	source $SDK_LIB/zlibs/sysconf
	
# name of target by default, omits arch
	vars+=(name_default)
	name_default=${os}_${release}_${version}
	
	
# conclude initialization
	if [[ -r   $SDK_LIB/zuper/zuper.init ]]; then
		source $SDK_LIB/zuper/zuper.init
	else source ./zuper/zuper.init; fi
	
# add all other binaries to the path
	path+=($SDK_LIB/bin)
	rehash
	
	
# For gettext
	TEXTDOMAIN=devuan
	
# create mandatory workdirs
	act "Creating directory ::1 dir::" $strapdir
	mkdir -p ${strapdir}
	
	
# ...
	
	act "library succesfully loaded"
	
	
} # Closes sdk_init

